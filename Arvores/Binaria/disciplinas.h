typedef struct curso Curso;
typedef struct disciplina Disciplina;

Curso *criarCurso(int cod,char nome[],int blocos,int semanas);
Curso *inserirCurso(Curso *raiz,Curso *novo);
Disciplina *criarDisciplina(int cod, char nome[], int bloco, int cargaH);
Disciplina *inserirDisciplina(Disciplina *raiz, Disciplina *novo);
int verificaFolhaCurso(Curso *raiz);
Curso *verificaFilhoCurso(Curso *raiz);
Curso* verificaMaiorFilho(Curso* raiz);
void swapCurso(Curso *raiz,Curso *filho);
Curso *removerCurso(Curso *raiz);
Curso *buscarCursoRemover(Curso *raiz,int cod);
int verificaNoFolha(Disciplina *raizD);
Disciplina *verificaUmFilho(Disciplina *raizD);
Disciplina* verificaMaiorFilhoDsc(Disciplina* raiz);
void swap(Disciplina *raizD, Disciplina *no);
Disciplina *removerDisciplina(Disciplina *raiz, int codDsc);
void buscarCursoRemoverDisciplina(Curso **raiz,int cod,int codDsc);
void inserirDisciplinanoCurso(Curso **raiz, int cod, Disciplina *newDsc);
void dadosCurso(Curso *raiz);
void imprimirCursos(Curso *raiz);
void imprimirCursoEspecifico(Curso *raiz,int cod);
void ImprimirCursoBloco(Curso *raiz,int blocos);
void dadosDisciplinas(Disciplina *raiz);
void imprimirDisciplinasCurso(Disciplina *raiz);
void imprimirDisciplinas(Curso *raiz, int cod);
void buscaDisciplinaPorCodigo(Disciplina *raizD, int codDisciplina);
void imprimirDisciplinaEspecifica(Curso *raiz, int codCurso, int codDisciplina);
void imprimirDisciplinasBloco(Disciplina *raiz, int bloco);
void imprimirDisciplinasDoBloco(Curso *raiz,int cod,int bloco);
void buscaDisciplnasPorCargaH(Disciplina *raizD, int c_horaria);
void imprimirDisciplinasPelaCargaH(Curso *raiz, int codCurso,int c_horaria);
